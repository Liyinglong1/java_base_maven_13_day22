<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="3371" started-at="2020-05-28T08:17:48Z" finished-at="2020-05-28T08:17:52Z">
    <groups>
    </groups>
    <test name="all-test" duration-ms="3371" started-at="2020-05-28T08:17:48Z" finished-at="2020-05-28T08:17:52Z">
      <class name="com.lemonban.base.testCase.All_Test_Case">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.lemonban.base.testCase.All_Test_Case@2552f2cb]" name="beforeSuite" is-config="true" duration-ms="45" started-at="2020-05-28T16:17:48Z" finished-at="2020-05-28T16:17:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="FAIL" signature="test_case(com.lemonban.base.pojo.ApiCaseDetail)[pri:0, instance:com.lemonban.base.testCase.All_Test_Case@2552f2cb]" name="test_case" duration-ms="2045" started-at="2020-05-28T16:17:49Z" data-provider="getData" finished-at="2020-05-28T16:17:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ApiCaseDetail [caseId=login_case_1, apiId=api_login, requestData={"mobile":"18373969442","authCode":"130102"}, actualResp=, expectedRespKeyInfo=[{"jsonPath":"$.code","expected":"0"},{"jsonPath":"$.success","expected":"True"}], extractRespData=, apiInfo=ApiInfo [apiId=api_login, apiName=登录, url=http://test-scm.shicai56.com/sc56.scm.api//loginByCode, type=POST, headers=[{"name":"Host","value":" test-scm.shicai56.com"},{"name":"Connection","value":"keep-alive"},{"name":"ontent-Length","value":"44"},{"name":"ontent-Length","value":"application/json, text/plain, */*"},{"name":"x-wx","value":"admin"},{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36"},{"name":"Content-Type","value":" application/json;charset=UTF-8"},{"name":"Origin","value":"http://test-scm.shicai56.com"},{"name":"Referer","value":"http://test-scm.shicai56.com/"},{"name":"Accept-Encoding","value":"gzip, deflate"},{"name":"Accept-Language","value":"zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7"},{"name":"Cookie","value":"sidebarStatus=opened; temp_token=66dde3ab-3594-4dd9-95bb-1fc95ceedea0"}], auth=], beforeCheckerList=[SqlChecker [sqlId=login_sql_1, caseId=login_case_1, type=bf, sql=SELECT COUNT(*) FROM ep_emp_oauth WHERE emp_id = 43, expected=[{"COUNT(*)":9}], actual=, checkResult=]], afterCheckerList=[SqlChecker [sqlId=login_sql_2, caseId=login_case_1, type=af, sql=SELECT COUNT(*) FROM ep_emp_oauth WHERE emp_id = 43, expected=[{"COUNT(*)":9}], actual=, checkResult=]], getRowNo()=2]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0] but found [0]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at com.lemonban.base.utils.AssertUtils.assertRespKeyInfo(AssertUtils.java:45)
	at com.lemonban.base.testCase.All_Test_Case.test_case(All_Test_Case.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_case -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.lemonban.base.testCase.All_Test_Case@2552f2cb]" name="afterSuite" is-config="true" duration-ms="212" started-at="2020-05-28T16:17:52Z" finished-at="2020-05-28T16:17:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.lemonban.base.testCase.All_Test_Case -->
    </test> <!-- all-test -->
  </suite> <!-- Suite -->
</testng-results>
